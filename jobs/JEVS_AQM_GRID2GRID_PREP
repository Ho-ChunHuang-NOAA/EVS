#!/bin/ksh

set -x

########################################
# Preliminary data setup step
########################################

##################################################
### SAVEGES  - Copy Files From TMPDIR to $GESdir
### SENDECF  - Flag Events on ecFLOW
### SENDCOM  - Copy Files From TMPDIR to $COMOUT
### SENDDBN  - Issue DBNet Client Calls
### SENDMAIL - Send email if file is missing
###################################################
export SENDCOM=${SENDCOM:-YES}
export SENDDBN=${SENDDBN:-YES}
export SENDECF=${SENDECF:-YES}
export SENDMAIL=${SENDMAIL:-NO}

# ###################################
# SET SHELL PROCESSING VARIABLES
# ###################################
date
export PS4='$SECONDS + '

###########################################################
# obtain unique LSF id (jobid) and make temp directories
###########################################################
export pid=$$

export DATA=${DATA:-${DATAROOT:?}/${jobid:?}}
mkdir -p ${DATA}
cd ${DATA}

export vhr=${vhr:-00}
export cycle=${cycle:-t${vhr}z}
setpdy.sh
. ./PDY

export envir=${envir:-prod}

# Define COMIN/COMOUT variables:

echo $COMPATH

export NET=${NET:-evs}
export STEP=${STEP:-prep}
export COMPONENT=${COMPONENT:-aqm}
export RUN=${RUN:-atmos}
export VERIF_CASE=${VERIF_CASE:-grid2obs}
export MODELNAME=${MODELNAME:-aqm}
export modsys=${modsys:-aqm}
export mod_ver=${mod_ver:-${aqm_ver}}

export HOMEevs=${HOMEevs:-${PACKAGEROOT}/${NET}.${evs_ver}}
export EXECevs=${EXECevs:-${HOMEevs}/exec}
export FIXevs=${FIXevs:-${HOMEevs}/fix}
export PARMevs=${PARMevs:-${HOMEevs}/parm}
export SCRIPTSevs=${SCRIPTSevs:-${HOMEevs}/scripts}
export USHevs=${USHevs:-${HOMEevs}/ush}
export MASKS=${MASKS:-${FIXevs}/masks}

#
#  The AirNOW obs in DCOM will continue to be updated after first
#  created upto 48 hours.
#  Process the observation input only when it stop updating.
#
export VDATE=${VDATE:-${PDYm3}}

export COMIN=${COMIN:-$(compath.py ${envir}/com/${NET}/${evs_ver})}
export COMINaqm=${COMINaqm:-$(compath.py ${envir}/com/${modsys}/${mod_ver})}
export COMOUT=${COMOUT:-$(compath.py -o ${NET}/${evs_ver})}
export COMOUTproc=${COMOUTproc:-${COMOUT}/${STEP}/${COMPONENT}/${RUN}.${VDATE}/${MODELNAME}}
mkdir -p ${COMOUT} ${COMOUTproc}

if [ "${VERIF_CASE}" == "grid2obs" ]; then
    # alternative choice is dan option different from aqons
    export airnow_hourly_type=${airnow_hourly_type:-aqobs}
    export DCOMINairnow=${DCOMINairnow:-${DCOMROOT}/${VDATE}}
    export DCOMINaeronet=${DCOMINaeronet:-${DCOMROOT}/${VDATE}}
else
    export DATA_TYPE=${DATA_TYPE:-abi}
    if [ "${DATA_TYPE}" == "abi" ]; then
        ## export DCOMINabi=${DCOMINabi:-${DCOMROOT}/${VDATE}/goes_abi}
        export DCOMINabi=${DCOMINabi:-/lfs/h1/ops/dev/dcom/${VDATE}/goes_abi}
        export satellite_name=${satellite_name:-g16}
        export GOES_EAST=${GOES_EAST:-g16}
        export GOES_WEST=${GOES_WEST:-g18}
        export AOD_SCAN_TYPE=${AOD_SCAN_TYPE:-AODC}
        export ADP_SCAN_TYPE=${ADP_SCAN_TYPE:-ADPC}
        export AOD_QC_NAME=${AOD_QC_NAME:-high}
    else
        echo "DATA_TYPE == ${DATA_TYPE} is not defined, exit"
	exit
    fi
fi


#######################################################################
# Execute the script.
#######################################################################

${HOMEevs}/scripts/${STEP}/${COMPONENT}/exevs_${COMPONENT}_${MODELNAME}_${VERIF_CASE}_${STEP}.sh

msg="JOB ${job} HAS COMPLETED NORMALLY."
postmsg "${msg}"

if [ "${KEEPDATA}" != "YES" ] ; then
    cd ${DATAROOT}
    rm -rf ${DATA}
fi

